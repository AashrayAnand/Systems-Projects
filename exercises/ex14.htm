<!DOCTYPE html>
<!-- saved from url=(0083)https://courses.cs.washington.edu/courses/cse333/19su/assignments/exercises/14.html -->
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://ogp.me/ns/fb#"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta property="og:image" content="https://courses.cs.washington.edu/courses/cse333/19su/site/img/CSEWordmark_sm.png">

  <title>Exercise 14 - CSE 333</title>

  <link href="./ex14_files/css" rel="stylesheet" type="text/css">
  <link href="./ex14_files/css(1)" rel="stylesheet" type="text/css">


  <link href="./ex14_files/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="./ex14_files/main.css">
</head>

<body>
  <header class="site-header"><!--
This is the navbar html which should appear on all pages.
It should be loaded into every page header using javascript.
Edit this file with your course title, number, year and quarter, URL, and 
customize your menu headings.
For details see: https://getbootstrap.com/docs/3.3/components/#navbar
-->
<div class="navbar navbar-inverse navbar-fixed-top cse333-navbar">
  <div class="container-fluid cse333-navbar-content">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="https://courses.cs.washington.edu/courses/cse333/19su/">CSE 333: Systems Programming</a>
    </div>
    <div class="collapse navbar-collapse">
        <nav>
      <ul class="nav navbar-nav">
        <li class="">
          <a href="https://courses.cs.washington.edu/courses/cse333/19su/">Home</a>
        </li>
        <li>
          <a href="https://courses.cs.washington.edu/courses/cse333/19su/calendar">Calendar</a>
        </li>
        <li class="active">
          <a href="https://courses.cs.washington.edu/courses/cse333/19su/assignments">Assignments</a>
        </li>
        <li>
          <a href="https://courses.cs.washington.edu/courses/cse333/19su/exams">Exams</a>
        </li>
        <li>
          <a href="https://piazza.com/class/jx2gmci8lr15ti"><span class="glyphicon glyphicon-new-window link-icon"></span>Message Board</a>
        </li>
      </ul>
        </nav>
      <ul class="nav navbar-nav navbar-right hidden-xs hidden-sm">
        <li><a>19su</a></li>
      </ul>
    </div><!-- /.nav-collapse -->
  </div><!-- /.container -->
</div><!-- /.navbar -->
</header>

  <div class="container">

    <!-- Begin page content -->

    <h1>CSE333 Exercise 14</h1>

    <p class="afterh">
    <b>Out:</b> &nbsp; Friday, August 9, 2019<br>
    <b>Due:</b> &nbsp; Monday, August 12, 2019 by <span class="red-text">10:30 am</span>
    </p>

    <section id="goals"><br>
      <div class="panel panel-default">
          <div class="panel-heading"><h3>Goals</h3></div>
          <div class="panel-body">
              <ul>
                  <li>Practice with TCP and client-side networking</li>
              </ul>
          </div>
      </div>
      </section>
  
  
      <div class="unspacepanel"></div>
  
  
      <section id="descr"><br>
      <div class="panel panel-default">
          <div class="panel-heading"><h3>Remote File Read</h3></div>
          <div class="panel-body">
  
       Write a C++ program that accepts three command line arguments:
       <ul>
         <li> the hostname of a server
         </li><li> the port number of that server
         </li><li> the name of a local file
       </li></ul>
       <p>
  
       The program should connect (via TCP) to the server on the
       supplied hostname and port.  Once connected, the program should
       read the bytes from the local file, and it should write those
       bytes over the TCP connection.  Once all of the bytes have been
       written, the program should close the TCP connection and exit.
       </p><p>
  
       To test your program, you can run a server using the <code>nc</code>
       program.  For example, to run the server on port 5555, and
       to have the server redirect the incoming bytes to file
       "output.bytes", run the following command:
  
       </p><pre><code>nc -l 5555 &gt; output.bytes</code></pre>
       <p>

      If you are running <code>nc</code> on the same computer/host that you are testing your code on,
      you can use the special loop-back IP address <code>127.0.0.1</code> to refer to the same host. Please note
      that each <code>attu</code> (e.g. <code>attu1</code>, <code>attu2</code>, etc.) counts as its own host,
      so if you are running on <code>attu</code> you can only reliably use <code>127.0.0.1</code> if both client
      and server are running on the same one.
  
       Note that <code>nc</code> will exit once it has processed a single connection,
       so you'll need to rerun <code>nc</code> each time you test your client.
       </p><p>
       
       There are a few requirements on your code:
       </p><ul>
         <li> You should modularize it nicely; consider splitting it
         into multiple source files if that makes sense, for example by isolating all of the
         network-specific code in a module.
           <p>
  
         </p></li><li> You should use read/write both to read from the input file
         and write over the socket to the server; note this means you
         need to pay attention to the possibility that read/write might
         return EINTR, and they might read/write less than you ask for.
         We recommend writing some utility functions to deal with this.
         <p>
  
         </p></li><li> Write a <strong>Makefile</strong> so that we can compile your code by
         typing "make".  Your Makefile should produce an executable
         binary called <code>ex14</code>.
       </li></ul>
    <p>
  Feel free to adapt sample code from lecture and section as part of your solution if it helps,
  but be sure you understand what your code does when you're done.
  
          </p></div>
      </div>
      </section>
  
  
      <section id="submit"><br>
        <div class="panel panel-default">
            <div class="panel-heading"><h3>Submission</h3></div>
            <div class="panel-body">
    
      <p><b>For this exercise, you choose what files to split your code into. Make sure to submit a <code>Makefile</code> we can use to compile your code into an executable called <code>ex14</code></b></p>
  
      <p>Your code must:
      </p><ul>
      
      <li>Compile with no warnings when <code>make</code> is run.
      </li>
    
        <li> Have a comment at the top of each source file with your name,
        student number, and CSE or UW email address</li>
    
        <li> Have no crashes, memory leaks, or memory errors on CSE linux machines</li>
     
        <li>Follow the style guidelines we covered in class, including
        naming conventions for classes, methods, and instance variables;
    proper use of const; and  appropriate comments. 
    If in doubt, follow the Google C++ style guide, 
    and <a href="https://courses.cs.washington.edu/courses/cse333/19su/assignments/exercises/code/cpplint.py">cpplint.py</a> may be helpful in flagging potential
    style problems.  (You can ignore cpplint complaints about using-directives and
    about header guards that do not contain full file paths names.)</li>
        
    <li> Be pretty: the formatting, modularization, variable and
        function names, and so on must make us smile rather than cry.</li>
      <li> Be robust: you should think about handling bogus input
        from the user, and you should handle hard-to-handle cases
        (if there are any) gracefully</li>
      </ul>

      <p>
        Submit your code on <a class="external" href="https://www.gradescope.com/"><button type="button" class="btn btn-default btn-xs link-button"><img class="link-icon" src="./ex14_files/icon_gradescope.png"> Gradescope</button></a>
       </p>
    
        </div>
      </div>
    </section>

  <!-- End page content -->

  </div>

  <footer class="site-footer"><!-- Insert the same footer on all pages -->
<div class="cse-wordmark"><img src="./ex14_files/CSEWordmark_sm.png" alt="CSE Wordmark"></div>
<div class="site-footer-right">
    <a href="https://www.washington.edu/online/terms/">UW Site Use Agreement</a>
</div>    
</footer>

  <script src="./ex14_files/jquery.min.js"></script>
  <script src="./ex14_files/bootstrap.min.js"></script>
  <script src="./ex14_files/nav-bar.js"></script>
  <script src="./ex14_files/footer.js"></script>


</body></html>